// src/pages/Home.js
import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import axios from 'axios';
import InterviewCard from '../components/InterviewCard'; // Import the new component

const Home = ({ user }) => {
  const [interviews, setInterviews] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchInterviews = async () => {
      if (!user || !user.token) {
        setLoading(false);
        return;
      }
      try {
        const token = localStorage.getItem('token');
        const res = await axios.get('http://localhost:5000/api/interview', {
          headers: {
            'x-auth-token': token,
          },
        });
        setInterviews(res.data);
      } catch (err) {
        console.error('Error fetching interviews:', err);
        setError('Failed to fetch interviews. Please try again.');
      } finally {
        setLoading(false);
      }
    };

    fetchInterviews();
  }, [user]); // Refetch when user changes (e.g., login/logout)

  if (!user) {
    return (
      <div className="container mt-5">
        <h1>Welcome to AI Interview Platform</h1>
        <p>Login to start your voice-based AI interview!</p>
      </div>
    );
  }

  if (loading) {
    return (
      <div className="container mt-5 text-center">
        <div className="spinner-border text-primary" role="status">
          <span className="visually-hidden">Loading...</span>
        </div>
        <p>Loading your interviews...</p>
      </div>
    );
  }

  if (error) {
    return <div className="container mt-5 alert alert-danger">{error}</div>;
  }

  return (
    <div className="container mt-5">
      <h1 className="mb-4 text-center">Your Interviews</h1>

      <div className="text-center mb-4">
        <Link to="/interview/new" className="btn btn-lg btn-success">
          <i className="bi bi-plus-circle me-2"></i> Create a New Interview
        </Link>
      </div>

      {interviews.length === 0 ? (
        <div className="alert alert-info text-center">
          You haven't taken any interviews yet. Click "Create a New Interview" to get started!
        </div>
      ) : (
        <div className="row">
          {interviews.map((interview) => (
            <div key={interview._id} className="col-md-6 col-lg-4 mb-4">
              <InterviewCard interview={interview} />
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default Home;


// src/pages/Feedback.js
import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import axios from 'axios';

const Feedback = () => {
  const { interviewId } = useParams(); // Now we only need interviewId
  const [feedback, setFeedback] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchFeedback = async () => {
      setLoading(true);
      try {
        const token = localStorage.getItem('token');
        if (!token) {
          setError('Authentication token missing. Please log in.');
          setLoading(false);
          return;
        }
        // Fetch feedback using interviewId
        const res = await axios.get(`http://localhost:5000/api/interview/${interviewId}/feedback`, {
          headers: {
            'x-auth-token': token,
          },
        });
        setFeedback(res.data);
      } catch (err) {
        console.error('Error fetching feedback:', err.response?.data || err.message);
        setError(err.response?.data?.msg || 'Failed to fetch feedback.');
      } finally {
        setLoading(false);
      }
    };

    if (interviewId) {
      fetchFeedback();
    }
  }, [interviewId]);

  if (loading) {
    return (
      <div className="container mt-5 text-center">
        <div className="spinner-border text-primary" role="status">
          <span className="visually-hidden">Loading Feedback...</span>
        </div>
        <p>Loading feedback...</p>
      </div>
    );
  }

  if (error) {
    return <div className="container mt-5 alert alert-danger">{error}</div>;
  }

  if (!feedback) {
    return <div className="container mt-5 alert alert-info">No feedback available for this interview yet.</div>;
  }

  return (
    <div className="container mt-5">
      <h2 className="mb-4 text-center">Interview Feedback</h2>
      <div className="card shadow-sm p-4">
        <h3 className="text-primary">Overall Assessment:</h3>
        <p><strong>Score:</strong> {feedback.overallScore}/100</p>
        <p><strong>Summary:</strong> {feedback.detailedFeedback}</p>

        {feedback.strengths && feedback.strengths.length > 0 && (
          <div className="mt-4">
            <h4 className="text-success">Strengths:</h4>
            <ul className="list-group">
              {feedback.strengths.map((strength, index) => (
                <li key={index} className="list-group-item">{strength}</li>
              ))}
            </ul>
          </div>
        )}

        {feedback.areasForImprovement && feedback.areasForImprovement.length > 0 && (
          <div className="mt-4">
            <h4 className="text-warning">Areas for Improvement:</h4>
            <ul className="list-group">
              {feedback.areasForImprovement.map((area, index) => (
                <li key={index} className="list-group-item">{area}</li>
              ))}
            </ul>
          </div>
        )}

        {feedback.questionAnalysis && feedback.questionAnalysis.length > 0 && (
          <div className="mt-4">
            <h4 className="text-info">Question-by-Question Analysis:</h4>
            {feedback.questionAnalysis.map((qa, index) => (
              <div key={index} className="card my-3 p-3 bg-light">
                <p><strong>Question:</strong> {qa.question}</p>
                <p><strong>Candidate Answer:</strong> {qa.candidateAnswer}</p>
                <p><strong>Feedback:</strong> {qa.feedback}</p>
                <p><strong>Score:</strong> {qa.score}</p>
              </div>
            ))}
          </div>
        )}

        {feedback.recommendation && (
            <div className="mt-4">
                <h4 className="text-danger">Recommendation:</h4>
                <p><strong>Verdict:</strong> {feedback.recommendation}</p>
                <p><strong>Message:</strong> {feedback.recommendationMessage}</p>
            </div>
        )}
      </div>
    </div>
  );
};

export default Feedback;


// src/pages/Login.js
import React, { useState } from 'react';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';

const Login = ({ setUser }) => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const navigate = useNavigate();

  const handleSubmit = async e => {
  e.preventDefault();
  try {
    const res = await axios.post('http://localhost:5000/api/auth/login', { email, password });
    const { token, user } = res.data;
    const userId = user?.id; // Ensure you get user.id from backend

    if (token && userId) {
      localStorage.setItem('token', token);
      localStorage.setItem('userId', userId);
      setUser({ token, userId });
      navigate('/');
    } else {
      alert('Login failed: token or userId missing from response');
    }
  } catch (err) {
    alert('Login failed. Please check credentials.');
  }
};


  return (
    <div className="container mt-5" style={{ maxWidth: '400px' }}>
      <h2>Login</h2>
      <form onSubmit={handleSubmit}>
        <input
          className="form-control my-2"
          type="email"
          value={email}
          onChange={e => setEmail(e.target.value)}
          placeholder="Email"
          required
        />
        <input
          className="form-control my-2"
          type="password"
          value={password}
          onChange={e => setPassword(e.target.value)}
          placeholder="Password"
          required
        />
        <button className="btn btn-primary mt-2" type="submit">Login</button>
      </form>
    </div>
  );
};

export default Login;



// src/pages/Signup.js
import React, { useState } from 'react';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';

const Signup = () => {
  const [username, setUsername] = useState(''); // Add username state
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const navigate = useNavigate();

  const handleSubmit = async e => {
    e.preventDefault();
    try {
      await axios.post('http://localhost:5000/api/auth/register', {
        username,
        email,
        password,
      });
      alert('Registration successful! Please login.');
      navigate('/login');
    } catch (err) {
      console.error(err.response?.data || err.message);
      alert('Signup failed. Try again.');
    }
  };

  return (
    <div className="container mt-5">
      <h2>Signup</h2>
      <form onSubmit={handleSubmit}>
        <input
          className="form-control my-2"
          type="text"
          value={username}
          onChange={e => setUsername(e.target.value)}
          placeholder="Username"
          required
        />
        <input
          className="form-control my-2"
          type="email"
          value={email}
          onChange={e => setEmail(e.target.value)}
          placeholder="Email"
          required
        />
        <input
          className="form-control my-2"
          type="password"
          value={password}
          onChange={e => setPassword(e.target.value)}
          placeholder="Password"
          required
        />
        <button className="btn btn-success mt-2" type="submit">
          Signup
        </button>
      </form>
    </div>
  );
};

export default Signup;


